<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
         http://www.springframework.org/schema/tx 
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
   <context:annotation-config/>
    <!-- 静态文件访问,主要是针对DispatcherServlet的拦截是/的--> 
	<!--<mvc:annotation-driven /> 
	<mvc:resources location="/image/" mapping="/image/**"/> 
	<mvc:resources location="/css/" mapping="/css/**"/> 
	<mvc:resources location="/js/" mapping="/js/**"/> -->
    <!-- spring mvc的应用 -->
   <context:component-scan base-package="com.legal"></context:component-scan>

	<!-- 上传拦截，如最大上传值及最小上传值 -->
		<bean id="multipartResolver"
			class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<!-- one of the properties available; the maximum file size in bytes -->
			<property name="maxUploadSize" value="7277180" />
		</bean> 
	<!-- 视图-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
   <!--数据源 -->
   <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />  
    <property name="ignoreResourceNotFound" value="false" />
	<property name="locations">
	<value>classpath:spring_config/dbconnect.properties</value>
	</property>
	</bean>
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <!-- <property name="driverClassName" value="${jdbc.driverClassName}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/> -->
    <property name="driverClassName" value="${DRIVER_NAME}"/>
    <property name="url" value="${DATABASE_URL}"/>
    <property name="username" value="${DATABASE_USER}"/>
    <property name="password" value="${DATABASE_PASSWORD}"/>
    </bean>
     <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="packagesToScan">
      <list>
        <value>com.legal.sys.domain</value>
      </list>
    </property>
    <property name="hibernateProperties">
      <props>
      	<!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> -->
      	<prop key="hibernate.dialect">org.hibernate.dialect.DmDialect</prop>
      	<prop key="hibernate.show_sql">true</prop>
      	<prop key="hibernate.hbm2ddl.auto">update</prop>
      </props>
    </property>
      </bean>
  <!--  <bean id="hibernateUtil" class="com.science.hibernateUtil.HibernateUtil"></bean> -->
  <!-- 配置Spring的事务处理 -->
	<!-- 创建事务管理器-->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
<!-- 配置AOP，Spring是通过AOP来进行事务管理的 -->
	<aop:config>
	<!-- 设置pointCut表示哪些方法要加入事务处理 -->
	<!-- 以下的事务是声明在DAO中，但是通常都会在Service来处理多个业务对象逻辑的关系，注入删除，更新等，此时如果在执行了一个步骤之后抛出异常
		就会导致数据不完整，所以事务不应该在DAO层处理，而应该在service，这也就是Spring所提供的一个非常方便的工具，声明式事务 -->
		<aop:pointcut id="allMethods"
			expression="execution(* com.legal.sys.service.*.*(..))" />
		<!-- 通过advisor来确定具体要加入事务控制的方法 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allMethods" />
	</aop:config>
<!-- 配置哪些方法要加入事务控制 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
		<!-- 让所有的方法都加入事务管理，为了提高效率，可以把一些查询之类的方法设置为只读的事务 -->
			<tx:method name="*" propagation="REQUIRED" read-only="true"/>
			<!-- 以下方法都是可能设计修改的方法，就无法设置为只读 -->
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="clear*" propagation="REQUIRED"/>
			<tx:method name="empty*" propagation="REQUIRED"/>
			<tx:method name="init*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
</beans>